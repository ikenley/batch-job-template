version: 0.2

env:
  variables:
    PLACEHOLDER_ENV_VAR: "TODO"
  parameter-store:
    DOCKER_USERNAME: /docker/username
    DOCKER_PASSWORD: /docker/password

phases:
  pre_build:
    commands:
      - echo Logging into DockerHub
      - echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USERNAME --password-stdin
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - echo Build started on `date`
      - IMAGE_TAG="$BRANCH_NAME-$CODEBUILD_BUILD_NUMBER"
      - echo "IMAGE_TAG=$IMAGE_TAG"
      - echo "Building Docker image..."
      - IMAGE_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$MAIN_IMAGE_REPO_NAME:$IMAGE_TAG
      - echo "IMAGE_URI=$IMAGE_URI"
      - docker build -t $MAIN_IMAGE_REPO_NAME:$IMAGE_TAG --build-arg IMAGE_TAG=$IMAGE_TAG --build-arg BRANCH_NAME=$BRANCH_NAME .
      - docker tag $MAIN_IMAGE_REPO_NAME:$IMAGE_TAG $IMAGE_URI
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$MAIN_IMAGE_REPO_NAME:$IMAGE_TAG
      - printf '[{"name":"%s","imageUri":"%s"}]' $MAIN_IMAGE_REPO_NAME $IMAGE_URI > imagedefinitions.json
      - cat imagedefinitions.json
      - echo "Revising Batch Job definition"
      - >
        OLD_JOB_DEFINITION=$(aws batch describe-job-definitions \
          --job-definition-name $JOB_DEFINITION \
          | jq -c '.jobDefinitions[0]')
      - echo "OLD_JOB_DEFINITION=$OLD_JOB_DEFINITION"
      - >
        NEW_JOB_DEFINITION=$(echo $OLD_JOB_DEFINITION \
          | jq -c --arg image "$IMAGE_URI" '.containerProperties.image = $image' \
          | jq -c 'del(.jobDefinitionArn)' \
          | jq -c 'del(.revision)' \
          | jq -c 'del(.status)')
      - echo "NEW_JOB_DEFINITION=$NEW_JOB_DEFINITION"
      - aws batch register-job-definition --type container --job-definition $JOB_DEFINITION --cli-input-json "$NEW_JOB_DEFINITION"
artifacts:
  files: imagedefinitions.json
